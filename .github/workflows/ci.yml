name: CI Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  validate:
    name: Code Quality & Build
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./portal

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'
          cache-dependency-path: portal/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Check code formatting
        run: npm run format:check

      - name: Run linter
        run: npm run lint

      - name: Build application
        run: npm run build

  docker-build:
    name: Docker Build Test
    runs-on: ubuntu-latest
    needs: [test]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./portal
          push: false
          tags: prequel-portal:test
          cache-from: type=gha
          cache-to: type=gha,mode=max

  terraform-validate:
    name: Terraform Validation
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.5.7

      - name: Terraform Format Check (infra)
        working-directory: ./infra
        run: terraform fmt -check

      - name: Terraform Init (infra)
        working-directory: ./infra
        run: terraform init -backend=false

      - name: Terraform Validate (infra)
        working-directory: ./infra
        run: terraform validate

      - name: Terraform Format Check (instance)
        working-directory: ./instance
        run: terraform fmt -check

      - name: Terraform Init (instance)
        working-directory: ./instance
        run: terraform init -backend=false

      - name: Terraform Validate (instance)
        working-directory: ./instance
        run: terraform validate

  scenario-tests:
    name: Scenario Tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./scenario/javascript

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'
          cache-dependency-path: scenario/javascript/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Run linter
        run: npm run lint

      - name: Run tests
        run: npm run test

      - name: Build scenario
        run: npm run build